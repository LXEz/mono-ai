parameters:
  - name: skip_code_scan
    displayName: Skip Code Scan
    type: boolean
    default: true

trigger:
  branches:
    include:
      - refs/tags/xiaoduo-ai-copilot-api

pr: none

variables:
  - ${{ if eq(variables['Build.SourceBranch'], 'refs/tags/xiaoduo-ai-copilot-api') }}:
      - group: xiaoduo-ai-copilot-api

pool:
  name: $(agent_pool)

stages:
  - template: ../templates/ci.yml
    parameters:
      skip_code_scan: ${{ parameters.skip_code_scan }}
      service_connection: $(sonar_service_connection)
      organization: $(sonar_organization)
      project_key: $(sonar_project_key)
      project_name: $(sonar_project_name)
      sources: $(sonar_sources)
  - stage: cd
    displayName: CD
    dependsOn: [ci]
    jobs:
      - job: build_deploy
        displayName: Build & Deploy
        steps:
          - checkout: self
            displayName: Checkout source
            clean: true
          - task: Docker@2
            displayName: Build image
            inputs:
              containerRegistry: '$(service_connection_acr)'
              repository: '$(container_repository)'
              command: 'build'
              Dockerfile: './packages/xiaoduo-ai-copilot-api/Dockerfile'
              buildContext: '.'
          - task: Docker@2
            displayName: Push image
            inputs:
              command: push
              containerRegistry: $(service_connection_acr)
              repository: $(container_repository)
          - task: replacetokens@6
            displayName: Replace tokens
            inputs:
              sources: |
                packages/vm-deployment/xiaoduo-ai-copilot-api/.env
              ifNoFilesFound: 'error'
          - task: CopyFilesOverSSH@0
            displayName: Upload files
            inputs:
              sshEndpoint: '$(ssh_service_conn)'
              sourceFolder: 'packages/vm-deployment/xiaoduo-ai-copilot-api'
              contents: '.env'
              targetFolder: '/app/vailley-mono/xiaoduo-ai-copilot-api'
              cleanTargetFolder: false
              cleanHiddenFilesInTarget: false
              readyTimeout: '20000'
              overwrite: true
              failOnEmptySource: true
          - task: AzureCLI@2
            displayName: Restart xiaoduo-ai-copilot-api
            inputs:
              azureSubscription: '$(service_connection_arm)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az vm run-command invoke -g $(resource_group) -n $(vm_name) --command-id RunShellScript --scripts "sudo /bin/sh /app/vailley-mono/xiaoduo-ai-copilot-api/restart-xiaoduo-ai-copilot-api-container.sh $(docker_service_name) $(container_registry) $(container_repository) $(Build.BuildId)"
